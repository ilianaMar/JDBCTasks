/*
 * This file is generated by jOOQ.
 */
package org.estafet.jooqModels.tables.records;


import java.math.BigDecimal;

import org.estafet.jooqModels.tables.ProductsInventory;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsInventoryRecord extends UpdatableRecordImpl<ProductsInventoryRecord> implements Record9<Integer, String, Integer, String, BigDecimal, BigDecimal, Boolean, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.products_inventory.product_id</code>.
     */
    public void setProductId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.products_inventory.product_id</code>.
     */
    public Integer getProductId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.products_inventory.product_name</code>.
     */
    public void setProductName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.products_inventory.product_name</code>.
     */
    public String getProductName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.products_inventory.available_quantity</code>.
     */
    public void setAvailableQuantity(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.products_inventory.available_quantity</code>.
     */
    public Integer getAvailableQuantity() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.products_inventory.product_type</code>.
     */
    public void setProductType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.products_inventory.product_type</code>.
     */
    public String getProductType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.products_inventory.price_without_vat</code>.
     */
    public void setPriceWithoutVat(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.products_inventory.price_without_vat</code>.
     */
    public BigDecimal getPriceWithoutVat() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.products_inventory.price_with_vat</code>.
     */
    public void setPriceWithVat(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.products_inventory.price_with_vat</code>.
     */
    public BigDecimal getPriceWithVat() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.products_inventory.in_stock</code>.
     */
    public void setInStock(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.products_inventory.in_stock</code>.
     */
    public Boolean getInStock() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.products_inventory.warehouse</code>.
     */
    public void setWarehouse(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.products_inventory.warehouse</code>.
     */
    public Integer getWarehouse() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.products_inventory.supplier_id</code>.
     */
    public void setSupplierId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.products_inventory.supplier_id</code>.
     */
    public Integer getSupplierId() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, Integer, String, BigDecimal, BigDecimal, Boolean, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, Integer, String, BigDecimal, BigDecimal, Boolean, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ProductsInventory.PRODUCTS_INVENTORY.PRODUCT_ID;
    }

    @Override
    public Field<String> field2() {
        return ProductsInventory.PRODUCTS_INVENTORY.PRODUCT_NAME;
    }

    @Override
    public Field<Integer> field3() {
        return ProductsInventory.PRODUCTS_INVENTORY.AVAILABLE_QUANTITY;
    }

    @Override
    public Field<String> field4() {
        return ProductsInventory.PRODUCTS_INVENTORY.PRODUCT_TYPE;
    }

    @Override
    public Field<BigDecimal> field5() {
        return ProductsInventory.PRODUCTS_INVENTORY.PRICE_WITHOUT_VAT;
    }

    @Override
    public Field<BigDecimal> field6() {
        return ProductsInventory.PRODUCTS_INVENTORY.PRICE_WITH_VAT;
    }

    @Override
    public Field<Boolean> field7() {
        return ProductsInventory.PRODUCTS_INVENTORY.IN_STOCK;
    }

    @Override
    public Field<Integer> field8() {
        return ProductsInventory.PRODUCTS_INVENTORY.WAREHOUSE;
    }

    @Override
    public Field<Integer> field9() {
        return ProductsInventory.PRODUCTS_INVENTORY.SUPPLIER_ID;
    }

    @Override
    public Integer component1() {
        return getProductId();
    }

    @Override
    public String component2() {
        return getProductName();
    }

    @Override
    public Integer component3() {
        return getAvailableQuantity();
    }

    @Override
    public String component4() {
        return getProductType();
    }

    @Override
    public BigDecimal component5() {
        return getPriceWithoutVat();
    }

    @Override
    public BigDecimal component6() {
        return getPriceWithVat();
    }

    @Override
    public Boolean component7() {
        return getInStock();
    }

    @Override
    public Integer component8() {
        return getWarehouse();
    }

    @Override
    public Integer component9() {
        return getSupplierId();
    }

    @Override
    public Integer value1() {
        return getProductId();
    }

    @Override
    public String value2() {
        return getProductName();
    }

    @Override
    public Integer value3() {
        return getAvailableQuantity();
    }

    @Override
    public String value4() {
        return getProductType();
    }

    @Override
    public BigDecimal value5() {
        return getPriceWithoutVat();
    }

    @Override
    public BigDecimal value6() {
        return getPriceWithVat();
    }

    @Override
    public Boolean value7() {
        return getInStock();
    }

    @Override
    public Integer value8() {
        return getWarehouse();
    }

    @Override
    public Integer value9() {
        return getSupplierId();
    }

    @Override
    public ProductsInventoryRecord value1(Integer value) {
        setProductId(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value2(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value3(Integer value) {
        setAvailableQuantity(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value4(String value) {
        setProductType(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value5(BigDecimal value) {
        setPriceWithoutVat(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value6(BigDecimal value) {
        setPriceWithVat(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value7(Boolean value) {
        setInStock(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value8(Integer value) {
        setWarehouse(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord value9(Integer value) {
        setSupplierId(value);
        return this;
    }

    @Override
    public ProductsInventoryRecord values(Integer value1, String value2, Integer value3, String value4, BigDecimal value5, BigDecimal value6, Boolean value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsInventoryRecord
     */
    public ProductsInventoryRecord() {
        super(ProductsInventory.PRODUCTS_INVENTORY);
    }

    /**
     * Create a detached, initialised ProductsInventoryRecord
     */
    public ProductsInventoryRecord(Integer productId, String productName, Integer availableQuantity, String productType, BigDecimal priceWithoutVat, BigDecimal priceWithVat, Boolean inStock, Integer warehouse, Integer supplierId) {
        super(ProductsInventory.PRODUCTS_INVENTORY);

        setProductId(productId);
        setProductName(productName);
        setAvailableQuantity(availableQuantity);
        setProductType(productType);
        setPriceWithoutVat(priceWithoutVat);
        setPriceWithVat(priceWithVat);
        setInStock(inStock);
        setWarehouse(warehouse);
        setSupplierId(supplierId);
    }
}
