/*
 * This file is generated by jOOQ.
 */
package org.estafet.jooqModels.tables.records;


import org.estafet.jooqModels.tables.SuppliersAddresses;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SuppliersAddressesRecord extends UpdatableRecordImpl<SuppliersAddressesRecord> implements Record7<Integer, String, String, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.suppliers_addresses.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.suppliers_addresses.address</code>.
     */
    public void setAddress(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.address</code>.
     */
    public String getAddress() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.suppliers_addresses.city</code>.
     */
    public void setCity(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.city</code>.
     */
    public String getCity() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.suppliers_addresses.province</code>.
     */
    public void setProvince(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.province</code>.
     */
    public String getProvince() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.suppliers_addresses.state</code>.
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.state</code>.
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.suppliers_addresses.postal_code</code>.
     */
    public void setPostalCode(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.postal_code</code>.
     */
    public Integer getPostalCode() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.suppliers_addresses.country</code>.
     */
    public void setCountry(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.suppliers_addresses.country</code>.
     */
    public String getCountry() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.ID;
    }

    @Override
    public Field<String> field2() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.ADDRESS;
    }

    @Override
    public Field<String> field3() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.CITY;
    }

    @Override
    public Field<String> field4() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.PROVINCE;
    }

    @Override
    public Field<String> field5() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.STATE;
    }

    @Override
    public Field<Integer> field6() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.POSTAL_CODE;
    }

    @Override
    public Field<String> field7() {
        return SuppliersAddresses.SUPPLIERS_ADDRESSES.COUNTRY;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getAddress();
    }

    @Override
    public String component3() {
        return getCity();
    }

    @Override
    public String component4() {
        return getProvince();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public Integer component6() {
        return getPostalCode();
    }

    @Override
    public String component7() {
        return getCountry();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getAddress();
    }

    @Override
    public String value3() {
        return getCity();
    }

    @Override
    public String value4() {
        return getProvince();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public Integer value6() {
        return getPostalCode();
    }

    @Override
    public String value7() {
        return getCountry();
    }

    @Override
    public SuppliersAddressesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord value2(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord value3(String value) {
        setCity(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord value4(String value) {
        setProvince(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord value6(Integer value) {
        setPostalCode(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord value7(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public SuppliersAddressesRecord values(Integer value1, String value2, String value3, String value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SuppliersAddressesRecord
     */
    public SuppliersAddressesRecord() {
        super(SuppliersAddresses.SUPPLIERS_ADDRESSES);
    }

    /**
     * Create a detached, initialised SuppliersAddressesRecord
     */
    public SuppliersAddressesRecord(Integer id, String address, String city, String province, String state, Integer postalCode, String country) {
        super(SuppliersAddresses.SUPPLIERS_ADDRESSES);

        setId(id);
        setAddress(address);
        setCity(city);
        setProvince(province);
        setState(state);
        setPostalCode(postalCode);
        setCountry(country);
    }
}
