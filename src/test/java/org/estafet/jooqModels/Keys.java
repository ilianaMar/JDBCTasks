/*
 * This file is generated by jOOQ.
 */
package org.estafet.jooqModels;


import org.estafet.jooqModels.tables.Customers;
import org.estafet.jooqModels.tables.CustomersAddresses;
import org.estafet.jooqModels.tables.Orders;
import org.estafet.jooqModels.tables.OrdersProductQuantities;
import org.estafet.jooqModels.tables.ProductsInventory;
import org.estafet.jooqModels.tables.Suppliers;
import org.estafet.jooqModels.tables.SuppliersAddresses;
import org.estafet.jooqModels.tables.records.CustomersAddressesRecord;
import org.estafet.jooqModels.tables.records.CustomersRecord;
import org.estafet.jooqModels.tables.records.OrdersProductQuantitiesRecord;
import org.estafet.jooqModels.tables.records.OrdersRecord;
import org.estafet.jooqModels.tables.records.ProductsInventoryRecord;
import org.estafet.jooqModels.tables.records.SuppliersAddressesRecord;
import org.estafet.jooqModels.tables.records.SuppliersRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CustomersRecord> CUSTOMERS_ADDRESS_ID_KEY = Internal.createUniqueKey(Customers.CUSTOMERS, DSL.name("customers_address_id_key"), new TableField[] { Customers.CUSTOMERS.ADDRESS_ID }, true);
    public static final UniqueKey<CustomersRecord> CUSTOMERS_EMAIL_KEY = Internal.createUniqueKey(Customers.CUSTOMERS, DSL.name("customers_email_key"), new TableField[] { Customers.CUSTOMERS.EMAIL }, true);
    public static final UniqueKey<CustomersRecord> CUSTOMERS_PKEY = Internal.createUniqueKey(Customers.CUSTOMERS, DSL.name("customers_pkey"), new TableField[] { Customers.CUSTOMERS.CUSTOMER_ID }, true);
    public static final UniqueKey<CustomersAddressesRecord> CUSTOMERS_ADDRESSES_PKEY = Internal.createUniqueKey(CustomersAddresses.CUSTOMERS_ADDRESSES, DSL.name("customers_addresses_pkey"), new TableField[] { CustomersAddresses.CUSTOMERS_ADDRESSES.ADDRESS_ID }, true);
    public static final UniqueKey<OrdersRecord> ORDERS_PKEY = Internal.createUniqueKey(Orders.ORDERS, DSL.name("orders_pkey"), new TableField[] { Orders.ORDERS.ID }, true);
    public static final UniqueKey<OrdersProductQuantitiesRecord> ORDERS_PRODUCT_QUANTITIES_PKEY = Internal.createUniqueKey(OrdersProductQuantities.ORDERS_PRODUCT_QUANTITIES, DSL.name("orders_product_quantities_pkey"), new TableField[] { OrdersProductQuantities.ORDERS_PRODUCT_QUANTITIES.ID }, true);
    public static final UniqueKey<ProductsInventoryRecord> PRODUCTS_INVENTORY_PKEY = Internal.createUniqueKey(ProductsInventory.PRODUCTS_INVENTORY, DSL.name("products_inventory_pkey"), new TableField[] { ProductsInventory.PRODUCTS_INVENTORY.PRODUCT_ID }, true);
    public static final UniqueKey<SuppliersRecord> SUPPLIERS_ADDRESS_ID_KEY = Internal.createUniqueKey(Suppliers.SUPPLIERS, DSL.name("suppliers_address_id_key"), new TableField[] { Suppliers.SUPPLIERS.ADDRESS_ID }, true);
    public static final UniqueKey<SuppliersRecord> SUPPLIERS_EMAIL_KEY = Internal.createUniqueKey(Suppliers.SUPPLIERS, DSL.name("suppliers_email_key"), new TableField[] { Suppliers.SUPPLIERS.EMAIL }, true);
    public static final UniqueKey<SuppliersRecord> SUPPLIERS_PKEY = Internal.createUniqueKey(Suppliers.SUPPLIERS, DSL.name("suppliers_pkey"), new TableField[] { Suppliers.SUPPLIERS.ID }, true);
    public static final UniqueKey<SuppliersAddressesRecord> SUPPLIERS_ADDRESSES_PKEY = Internal.createUniqueKey(SuppliersAddresses.SUPPLIERS_ADDRESSES, DSL.name("suppliers_addresses_pkey"), new TableField[] { SuppliersAddresses.SUPPLIERS_ADDRESSES.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CustomersRecord, CustomersAddressesRecord> CUSTOMERS__CUSTOMERS_ADDRESS_ID_FKEY = Internal.createForeignKey(Customers.CUSTOMERS, DSL.name("customers_address_id_fkey"), new TableField[] { Customers.CUSTOMERS.ADDRESS_ID }, Keys.CUSTOMERS_ADDRESSES_PKEY, new TableField[] { CustomersAddresses.CUSTOMERS_ADDRESSES.ADDRESS_ID }, true);
    public static final ForeignKey<OrdersRecord, CustomersRecord> ORDERS__ORDERS_CUSTOMER_ID_FKEY = Internal.createForeignKey(Orders.ORDERS, DSL.name("orders_customer_id_fkey"), new TableField[] { Orders.ORDERS.CUSTOMER_ID }, Keys.CUSTOMERS_PKEY, new TableField[] { Customers.CUSTOMERS.CUSTOMER_ID }, true);
    public static final ForeignKey<OrdersProductQuantitiesRecord, OrdersRecord> ORDERS_PRODUCT_QUANTITIES__ORDERS_PRODUCT_QUANTITIES_OID_FKEY = Internal.createForeignKey(OrdersProductQuantities.ORDERS_PRODUCT_QUANTITIES, DSL.name("orders_product_quantities_oid_fkey"), new TableField[] { OrdersProductQuantities.ORDERS_PRODUCT_QUANTITIES.OID }, Keys.ORDERS_PKEY, new TableField[] { Orders.ORDERS.ID }, true);
    public static final ForeignKey<OrdersProductQuantitiesRecord, ProductsInventoryRecord> ORDERS_PRODUCT_QUANTITIES__ORDERS_PRODUCT_QUANTITIES_PID_FKEY = Internal.createForeignKey(OrdersProductQuantities.ORDERS_PRODUCT_QUANTITIES, DSL.name("orders_product_quantities_pid_fkey"), new TableField[] { OrdersProductQuantities.ORDERS_PRODUCT_QUANTITIES.PID }, Keys.PRODUCTS_INVENTORY_PKEY, new TableField[] { ProductsInventory.PRODUCTS_INVENTORY.PRODUCT_ID }, true);
    public static final ForeignKey<ProductsInventoryRecord, SuppliersRecord> PRODUCTS_INVENTORY__PRODUCTS_INVENTORY_SUPPLIER_ID_FKEY = Internal.createForeignKey(ProductsInventory.PRODUCTS_INVENTORY, DSL.name("products_inventory_supplier_id_fkey"), new TableField[] { ProductsInventory.PRODUCTS_INVENTORY.SUPPLIER_ID }, Keys.SUPPLIERS_PKEY, new TableField[] { Suppliers.SUPPLIERS.ID }, true);
    public static final ForeignKey<SuppliersRecord, SuppliersAddressesRecord> SUPPLIERS__SUPPLIERS_ADDRESS_ID_FKEY = Internal.createForeignKey(Suppliers.SUPPLIERS, DSL.name("suppliers_address_id_fkey"), new TableField[] { Suppliers.SUPPLIERS.ADDRESS_ID }, Keys.SUPPLIERS_ADDRESSES_PKEY, new TableField[] { SuppliersAddresses.SUPPLIERS_ADDRESSES.ID }, true);
}
